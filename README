

**
The application is much more easier to compile with the Make tool. The Make tool does the whole building process and provides a complete, ready to use executable (a gcc compiler is also required).

For users with no "make" tool available, a solution could be to rebuild completely from the sources, or for windows users, install the mingw and msys (http://www.mingw.org/) tools that provide all the necessary (make and a gcc compiler).


The general procedures to know are the following :
	a) The "Make" command produces the executable "MCDA" and,
	b) to run the application, a MCDA problem (stochastic or deterministic) numerical instance is required as a parameter (some instances are present in the "data" directory) :
		eg: to run PROMETHEE on the deterministic numerical instance given by "data1" file (into ./data/ directory) :
			./MCDA 0 0 ./data/data1
			* The digit 0 as 2nd argument, tells the application to use PROMETHEE with an usual method and not the stochastic version. To run the application on a stochastic multicriteria problem whose joint distribution is not known, just change the digit provided as argument to 1.
			* The digit 0 as 3rd argument tells the application to use the PROMETHEE I outranking method, and 1 for a complete ranking (PROMETHEE II).
	c) When the number of arguments provided are more than 4, the flowsort method is applied. The 5th provided argument is the file of reference profiles :
		./MCDA 0 0 ./data/data2 ./data/data2_reference_profiles
		the "data2_reference_profiles" file here contains the reference profiles for the MCDA problem instance "data2".


**
To interpret the format of the files containing the results generated by the application, see README_OUTPUT


**
To know the required formatting of MCDA problems instances, see README_INPUT


**
For further explanations on how the application works, we have tried to provide concise comments in the sources : directories ./srcs/ and ./heads/
